schema {
  query: QueryRoot
  mutation: MutationRoot
}

type Asset721 {
  workId: String!
  address: String!
  tokenId: String!
  name: String!
  description: String!
  imageUrl: String!
  imagePreviewUrl: String!
  permalink: String!
  usdPrice: Float!
  ethPrice: Float!
}

type Thumbnail {
  id: String!
  imagePath: String!
  signedImageUrl: String!
  order: Int!
}

input SellNftInput {
  workId: String!
  ether: Float!
}

type MutationRoot {
  registerUser(input: RegisterUserInput!): String!
  importWork(input: ImportWorkInput!): Boolean!
  importThumbnail(input: ImportThumbnailInput!): Boolean!
  preSignUploadWork: PreSignUploadUrl!
  preSignUploadThumbnail: PreSignUploadUrl!
  createNft721(input: CreateNft721Input!): Boolean!
  createNft1155(input: CreateNft1155Input!): Boolean!
  deleteWork(id: String!): Boolean!
  sellNft721(input: SellNftInput!): Boolean!
  sellNft1155(input: SellNftInput!): Boolean!
  transferNft721(input: TransferNftInput!): Boolean!
  transferNft1155(input: TransferNftInput!): Boolean!
}

input TransferNftInput {
  workId: String!
  toAddress: String!
}

type Asset1155 {
  workId: String!
  address: String!
  tokenId: String!
  name: String!
  description: String!
  imageUrl: String!
  imagePreviewUrl: String!
  permalink: String!
  usdPrice: Float!
  ethPrice: Float!
}

input ImportWorkInput {
  fileName: String!
}

input RegisterUserInput {
  email: String!
  password: String!
  walletAddress: String!
  walletSecret: String!
}

type QueryRoot {
  me: User!
  allWorks(status: WorkStatus, nextKey: String, limit: Int): WorkConnection!
  worksByIds(ids: [String!]!): [Work!]!
  work(id: String!): Work!
  ownNft(workId: String!): OwnNft!
}

input ImportThumbnailInput {
  fileName: String!
}

input CreateNft721Input {
  workId: String!
  gsPath: String!
  point: Int!
  level: Int!
}

type WorkConnection {
  edges: [WorkEdge!]!
  nextKey: String
  totalCount: Int
}

type Nft1155Balance {
  workId: String!
  balance: Int!
}

enum WorkStatus {
  PREPARE
  PUBLISH_NFT
  SELL_ORDER
}

type OwnNft {
  erc721: Boolean!
  erc1155: Boolean!
}

type Work {
  id: String!
  videoPath: String!
  signedVideoUrl: String!
  status: WorkStatus!
  thumbnails: [Thumbnail!]!
  asset721: Asset721
  asset1155: Asset1155
}

input CreateNft1155Input {
  workId: String!
  gsPath: String!
  point: Int!
  level: Int!
  amount: Int!
}

type User {
  id: String!
  walletAddress: String!
  balance: Float!
  nft721Num: Int!
  nft1155Num: [Nft1155Balance!]!
}

type PreSignUploadUrl {
  url: String!
  fileName: String!
}

type WorkEdge {
  node: Work!
}
